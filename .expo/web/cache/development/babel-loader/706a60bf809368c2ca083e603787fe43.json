{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { SearchScreen } from \"../screens/SearchScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { SavedScreen } from \"../screens/SavedScreen\";\nimport { AccountScreen } from \"../screens/AccountScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      }\n    })]\n  });\n}\nvar BottomTab = createBottomTabNavigator();\nfunction BottomTabNavigator() {\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"Search\",\n    screenOptions: {\n      tabBarActiveTintColor: \"black\"\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"Search\",\n      component: SearchScreen,\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color;\n          return _jsx(TabBarIcon, {\n            name: \"magnify\",\n            color: color\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Saved\",\n      component: SavedScreen,\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return _jsx(TabBarIcon, {\n            name: \"heart-outline\",\n            color: color\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Account\",\n      component: AccountScreen,\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color;\n          return _jsx(TabBarIcon, {\n            name: \"account-circle-outline\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\nfunction TabBarIcon(props) {\n  return _jsx(MaterialCommunityIcons, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"names":["createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","MaterialCommunityIcons","SearchScreen","LinkingConfiguration","SavedScreen","AccountScreen","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","presentation","BottomTab","tabBarActiveTintColor","tabBarIcon","color","TabBarIcon","props","marginBottom"],"sources":["C:/Users/vakidev/Desktop/apartments-clone/navigation/index.tsx"],"sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport { SearchScreen } from '../screens/SearchScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\nimport { SavedScreen } from '../screens/SavedScreen';\nimport { AccountScreen } from '../screens/AccountScreen';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Search\"\n      screenOptions={{\n        tabBarActiveTintColor: \"black\"\n      }}>\n        <BottomTab.Screen\n        name=\"Search\"\n        component={SearchScreen}\n        options={{\n          headerShown:false,\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"magnify\" color={color} />,\n        }}\n      />\n        <BottomTab.Screen\n        name=\"Saved\"\n        component={SavedScreen}\n        options={{\n          headerShown:false,\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"heart-outline\" color={color} />,\n        }}\n      />\n        <BottomTab.Screen\n        name=\"Account\"\n        component={AccountScreen}\n        options={{\n          headerShown:false,\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"account-circle-outline\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof MaterialCommunityIcons>['name'];\n  color: string;\n}) {\n  return <MaterialCommunityIcons size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"],"mappings":";;;AAKA,SAASA,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,mBAAmB,EAAEC,YAAY,EAAEC,SAAS,QAAQ,0BAA0B;AACvF,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,sBAAsB,QAAQ,oBAAoB;AAG3D,SAASC,YAAY;AAErB,OAAOC,oBAAoB;AAC3B,SAASC,WAAW;AACpB,SAASC,aAAa;AAAmC;AAAA;AAEzD,eAAe,SAASC,UAAU,OAAoD;EAAA,IAAjDC,WAAW,QAAXA,WAAW;EAC9C,OACE,KAAC,mBAAmB;IAClB,OAAO,EAAEJ,oBAAqB;IAC9B,KAAK,EAAEI,WAAW,KAAK,MAAM,GAAGT,SAAS,GAAGD,YAAa;IAAA,UACzD,KAAC,aAAa;EAAG,EACG;AAE1B;AAMA,IAAMW,KAAK,GAAGT,0BAA0B,EAAsB;AAE9D,SAASU,aAAa,GAAG;EACvB,OACE,MAAC,KAAK,CAAC,SAAS;IAAA,WACd,KAAC,KAAK,CAAC,MAAM;MAAC,IAAI,EAAC,MAAM;MAAC,SAAS,EAAEC,kBAAmB;MAAC,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAM;IAAE,EAAG,EAC5F,KAAC,KAAK,CAAC,KAAK;MAAC,aAAa,EAAE;QAAEC,YAAY,EAAE;MAAQ;IAAE,EACxC;EAAA,EACE;AAEtB;AAMA,IAAMC,SAAS,GAAGlB,wBAAwB,EAAoB;AAE9D,SAASe,kBAAkB,GAAG;EAE5B,OACE,MAAC,SAAS,CAAC,SAAS;IAClB,gBAAgB,EAAC,QAAQ;IACzB,aAAa,EAAE;MACbI,qBAAqB,EAAE;IACzB,CAAE;IAAA,WACA,KAAC,SAAS,CAAC,MAAM;MACjB,IAAI,EAAC,QAAQ;MACb,SAAS,EAAEZ,YAAa;MACxB,OAAO,EAAE;QACPS,WAAW,EAAC,KAAK;QACjBI,UAAU,EAAE;UAAA,IAAGC,KAAK,SAALA,KAAK;UAAA,OAAO,KAAC,UAAU;YAAC,IAAI,EAAC,SAAS;YAAC,KAAK,EAAEA;UAAM,EAAG;QAAA;MACxE;IAAE,EACF,EACA,KAAC,SAAS,CAAC,MAAM;MACjB,IAAI,EAAC,OAAO;MACZ,SAAS,EAAEZ,WAAY;MACvB,OAAO,EAAE;QACPO,WAAW,EAAC,KAAK;QACjBI,UAAU,EAAE;UAAA,IAAGC,KAAK,SAALA,KAAK;UAAA,OAAO,KAAC,UAAU;YAAC,IAAI,EAAC,eAAe;YAAC,KAAK,EAAEA;UAAM,EAAG;QAAA;MAC9E;IAAE,EACF,EACA,KAAC,SAAS,CAAC,MAAM;MACjB,IAAI,EAAC,SAAS;MACd,SAAS,EAAEX,aAAc;MACzB,OAAO,EAAE;QACPM,WAAW,EAAC,KAAK;QACjBI,UAAU,EAAE;UAAA,IAAGC,KAAK,SAALA,KAAK;UAAA,OAAO,KAAC,UAAU;YAAC,IAAI,EAAC,wBAAwB;YAAC,KAAK,EAAEA;UAAM,EAAG;QAAA;MACvF;IAAE,EACF;EAAA,EACkB;AAE1B;AAKA,SAASC,UAAU,CAACC,KAGnB,EAAE;EACD,OAAO,KAAC,sBAAsB;IAAC,IAAI,EAAE,EAAG;IAAC,KAAK,EAAE;MAAEC,YAAY,EAAE,CAAC;IAAE;EAAE,GAAKD,KAAK,EAAI;AACrF"},"metadata":{},"sourceType":"module"}